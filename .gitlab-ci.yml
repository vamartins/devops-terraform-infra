before_script:
  - echo "VAGNER DEVOPS - Testing Pipeline"

include:
  - local: /templates/infra-pipelines/terraform-gitlab-pipeline.yml
  - local: /templates/infra-pipelines/terraform-sec.yml

.variables: &variables
  TF_ROOT: $CI_PROJECT_DIR/infra/
  GIT_USER_USERNAME: $GIT_USER_USERNAME
  #terraform's variables
  TF_VAR_application_name: $CI_PROJECT_NAME
  TF_VAR_logs_path: /logs
  TF_VAR_aws_region: $AWS_REGION
  TF_VAR_aws_deployment_role: deployment_role_todo

.dev_variables: &dev_variables
  ENVIRONMENT: dev
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
  #terraform's variables
  TF_VAR_environment: $ENVIRONMENT
  TF_VAR_aws_account_number: $AWS_ACCOUNT_ID


stages:
  - test
  - deploy_mr
  - tag_version
  - promote_dev
  - promote_test
  - promote_preprod
  - promote_prod

tfsec:
  extends: .tfsec
  stage: test
  only:
    - merge_requests

checkov:
  extends: .checkov
  stage: test
  only:
    - merge_requests

tflint:
  extends: .tflint
  stage: test
  only:
    - merge_requests

tf_plan:
  extends: .tf_plan
  variables:
    <<: *dev_variables
  stage: test
  only:
    - merge_requests

deploy_mr:
  extends: .tf_deploy
  variables:
    <<: *dev_variables
  stage: deploy_mr
  only:
    - merge_requests
  when: manual

destroy_mr:
  extends: .tf_destroy
  variables:
    <<: *dev_variables
  stage: deploy_mr
  only:
    - merge_requests
  when: manual

tag_version:
  extends: .tag_version
  stage: tag_version
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $GITLAB_USER_LOGIN == $GIT_USER_USERNAME

.promote_dev:
  extends: .promote_tf
  stage: promote_dev
  variables:
    <<: *dev_variables
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $GITLAB_USER_LOGIN == $GIT_USER_USERNAME